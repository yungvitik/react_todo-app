{"version":3,"sources":["components/Footer.jsx","components/TodoForm.jsx","components/TodoItem.jsx","components/TodoList.jsx","App.js","components/LocalStorage.jsx","index.js"],"names":["Footer","completedTodos","activeTodos","setFilter","filter","deleteCompletedTodos","className","length","href","classNames","selected","onClick","event","target","textContent","type","TodoForm","updateTodos","useState","inputValue","setInputValue","onSubmit","preventDefault","createTodo","id","Date","title","completed","value","placeholder","onChange","TodoItem","todo","handleDelete","handleChecked","updateTodoTitle","isEditTodos","setIsEditTodos","todoValue","setTodoValue","editing","onDoubleClick","checked","onKeyDown","key","TodoList","todos","setTodos","hasToogleChecked","setHasToogleChecked","todoId","updateTitle","map","newTodos","useEffect","htmlFor","App","initialValue","item","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","console","log","useLocalStorage","filterTodos","useCallback","filterBy","filteredTodos","useMemo","newTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9247d857.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport classNames from 'classnames';\n\nexport const Footer = (\n  { completedTodos,\n    activeTodos,\n    setFilter,\n    filter,\n    deleteCompletedTodos },\n) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {activeTodos.length <= 1 ? (\n        `${activeTodos.length} item left`\n      ) : (\n        `${activeTodos.length} items left`\n      )}\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={classNames({\n            selected: filter === 'All',\n          })}\n          onClick={(event) => {\n            setFilter(event.target.textContent);\n          }}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={classNames({\n            selected: filter === 'Active',\n          })}\n          onClick={(event) => {\n            setFilter(event.target.textContent);\n          }}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={classNames({\n            selected: filter === 'Completed',\n          })}\n          onClick={(event) => {\n            setFilter(event.target.textContent);\n          }}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n    {!!completedTodos.length && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={deleteCompletedTodos}\n      >\n        Clear completed\n      </button>\n    )}\n  </footer>\n);\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\n\nexport const TodoForm = ({ updateTodos }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInput = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const hanbleSubmit = (event) => {\n    event.preventDefault();\n\n    if (inputValue === '') {\n      return;\n    }\n\n    const createTodo = {\n      id: +new Date(),\n      title: inputValue,\n      completed: false,\n    };\n\n    updateTodos(createTodo);\n    setInputValue('');\n  };\n\n  return (\n    <form onSubmit={hanbleSubmit}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        onChange={handleInput}\n      />\n    </form>\n  );\n};\n","/* eslint-disable max-len */\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const TodoItem = ({ todo,\n  handleDelete,\n  handleChecked,\n  updateTodoTitle }) => {\n  const [isEditTodos, setIsEditTodos] = useState(false);\n  const [todoValue, setTodoValue] = useState(todo.title);\n\n  return (\n    <li\n      className={classNames({\n        completed: todo.completed, editing: isEditTodos,\n      })}\n      onDoubleClick={() => {\n        setIsEditTodos(true);\n      }}\n    >\n      <div\n        className=\"view\"\n      >\n        {}\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={(event) => {\n            handleChecked(event, todo.id);\n          }}\n        />\n        <label>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => {\n            handleDelete(todo.id);\n          }}\n        />\n      </div>\n      <input\n        value={todoValue}\n        type=\"text\"\n        className=\"edit\"\n        onChange={(event) => {\n          setTodoValue(event.target.value);\n        }}\n        onKeyDown={(event) => {\n          if (event.key === 'Enter') {\n            setIsEditTodos(false);\n            updateTodoTitle(todo.id, todoValue);\n            event.preventDefault();\n          }\n\n          if (event.key === 'Escape') {\n            setTodoValue(todo.title);\n            setIsEditTodos(false);\n          }\n        }}\n      />\n    </li>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\n\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({ todos, setTodos }) => {\n  const [hasToogleChecked, setHasToogleChecked] = useState(false);\n\n  const toggleTodos = (event) => {\n    const newTodos = todos.map(todo => ({\n      ...todo,\n      completed: event.target.checked,\n    }));\n\n    setTodos(newTodos);\n  };\n\n  const updateTodoTitle = (todoId, todoValue) => {\n    const updateTitle = todos.map((todo) => {\n      if (todo.id === todoId) {\n        return ({\n          ...todo,\n          title: todoValue,\n        });\n      }\n\n      return todo;\n    });\n\n    setTodos(updateTitle);\n  };\n\n  const handleChecked = (event, todoId) => {\n    const newTodos = todos.map((todo) => {\n      if (todo.id === todoId) {\n        return {\n          ...todo,\n          completed: event.target.checked,\n        };\n      }\n\n      return todo;\n    });\n\n    setTodos(newTodos);\n  };\n\n  const handleDelete = (todoId) => {\n    const newTodos = todos.filter(todo => (\n      !(todo.id === todoId)\n    ));\n\n    setTodos(newTodos);\n  };\n\n  useEffect(() => {\n    const completedTodos = todos.filter(todo => todo.completed).length;\n\n    setHasToogleChecked(completedTodos === todos.length);\n  }, [todos]);\n\n  return (\n    <section className=\"main\">\n      {!!todos.length && (\n        <>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            checked={hasToogleChecked}\n            className=\"toggle-all\"\n            onChange={toggleTodos}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        </>\n      )}\n\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            handleChecked={handleChecked}\n            handleDelete={handleDelete}\n            updateTodoTitle={updateTodoTitle}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import React, { useState, useMemo, useCallback } from 'react';\nimport { useLocalStorage } from './components/LocalStorage';\nimport { Footer } from './components/Footer';\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\n\nfunction App() {\n  const [todos, setTodos] = useLocalStorage('todos', []);\n  const [filter, setFilter] = useState('All');\n\n  const completedTodos = todos.filter(todo => todo.completed);\n  const activeTodos = todos.filter(todo => !todo.completed);\n\n  const updateTodos = (newTodo) => {\n    setTodos([...todos, newTodo]);\n  };\n\n  const filterTodos = useCallback((filterBy) => {\n    switch (filterBy) {\n      case 'Active':\n        return todos.filter(todo => !todo.completed);\n      case 'Completed':\n        return todos.filter(todo => todo.completed);\n      case 'All':\n      default: {\n        return todos;\n      }\n    }\n  }, [todos]);\n\n  const filteredTodos = useMemo(\n    () => filterTodos(filter), [filter, filterTodos],\n  );\n\n  const deleteCompletedTodos = () => {\n    setTodos(activeTodos);\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos App</h1>\n        <TodoForm\n          updateTodos={updateTodos}\n        />\n      </header>\n\n      <TodoList\n        todos={filteredTodos}\n        setTodos={setTodos}\n      />\n\n      {!!todos.length && (\n        <Footer\n          completedTodos={completedTodos}\n          activeTodos={activeTodos}\n          todos={filteredTodos}\n          filter={filter}\n          setFilter={setFilter}\n          deleteCompletedTodos={deleteCompletedTodos}\n        />\n      )}\n    </section>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-console */\nimport { useState } from 'react';\n\nexport function useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n  const setValue = (value) => {\n    try {\n      const valueToStore = value instanceof Function\n        ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}